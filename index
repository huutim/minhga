<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <title>Cờ Caro 9x9</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background-color: #f0f0f0;
    }
    h1 {
      margin-top: 20px;
    }
    #board {
      display: grid;
      grid-template-columns: repeat(9, 50px);
      grid-template-rows: repeat(9, 50px);
      gap: 2px;
      margin: 20px auto;
      width: max-content;
    }
    .cell {
      width: 50px;
      height: 50px;
      background-color: white;
      border: 1px solid #ccc;
      font-size: 30px;
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .cell:hover {
      background-color: #f9f9f9;
    }
    #status {
      margin-top: 10px;
      font-size: 18px;
    }
    #reset {
      margin-top: 20px;
      padding: 8px 16px;
      font-size: 16px;
      cursor: pointer;
    }
  </style>
</head>
<body>

  <h1>Cờ Caro 9x9</h1>
  <div id="board"></div>
  <div id="status">Lượt của người chơi: X</div>
  <button id="reset">Chơi lại</button>

  <script>
    const size = 9;
    const board = document.getElementById('board');
    const status = document.getElementById('status');
    let currentPlayer = 'X';
    let gameBoard = Array(size).fill().map(() => Array(size).fill(''));
    let gameOver = false;

    function createBoard() {
      board.innerHTML = '';
      for (let y = 0; y < size; y++) {
        for (let x = 0; x < size; x++) {
          const cell = document.createElement('div');
          cell.classList.add('cell');
          cell.dataset.x = x;
          cell.dataset.y = y;
          cell.addEventListener('click', handleClick);
          board.appendChild(cell);
        }
      }
    }

    function handleClick(e) {
      if (gameOver) return;
      const x = parseInt(e.target.dataset.x);
      const y = parseInt(e.target.dataset.y);
      if (gameBoard[y][x]) return;

      gameBoard[y][x] = currentPlayer;
      e.target.textContent = currentPlayer;

      if (checkWin(x, y)) {
        status.textContent = `Người chơi ${currentPlayer} thắng!`;
        gameOver = true;
        return;
      }

      currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
      status.textContent = `Lượt của người chơi: ${currentPlayer}`;
    }

    function checkWin(x, y) {
      const directions = [
        [1, 0],  // ngang
        [0, 1],  // dọc
        [1, 1],  // chéo chính
        [1, -1], // chéo phụ
      ];

      for (const [dx, dy] of directions) {
        let count = 1;
        for (let dir = -1; dir <= 1; dir += 2) {
          let i = 1;
          while (true) {
            const nx = x + dx * i * dir;
            const ny = y + dy * i * dir;
            if (nx < 0 || ny < 0 || nx >= size || ny >= size) break;
            if (gameBoard[ny][nx] === currentPlayer) {
              count++;
              i++;
            } else break;
          }
        }
        if (count >= 5) return true;
      }
      return false;
    }

    document.getElementById('reset').addEventListener('click', () => {
      currentPlayer = 'X';
      gameOver = false;
      gameBoard = Array(size).fill().map(() => Array(size).fill(''));
      status.textContent = `Lượt của người chơi: ${currentPlayer}`;
      createBoard();
    });

    createBoard();
  </script>

</body>
</html>
